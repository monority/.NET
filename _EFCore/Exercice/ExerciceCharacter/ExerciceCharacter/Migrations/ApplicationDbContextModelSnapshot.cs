// <auto-generated />
using System;
using Demo01.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciceCharacter.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciceCharacter.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Armor")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<bool>("CanGetKill")
                        .HasColumnType("bit");

                    b.Property<int?>("Damage")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HealthPoints")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int?>("KillCounts")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 100,
                            CanGetKill = false,
                            Damage = 1000,
                            DateCreation = new DateTime(2025, 2, 3, 12, 33, 47, 614, DateTimeKind.Local).AddTicks(7513),
                            HealthPoints = 100,
                            KillCounts = 0,
                            Nickname = "God"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
