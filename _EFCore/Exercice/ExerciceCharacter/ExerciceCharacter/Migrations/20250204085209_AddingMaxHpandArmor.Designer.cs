// <auto-generated />
using System;
using Demo01.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciceCharacter.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250204085209_AddingMaxHpandArmor")]
    partial class AddingMaxHpandArmor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciceCharacter.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Armor")
                        .HasColumnType("int");

                    b.Property<int?>("Damage")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HealthPoints")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("KillCounts")
                        .HasColumnType("int");

                    b.Property<int?>("MaxArmor")
                        .HasColumnType("int");

                    b.Property<int?>("MaxHP")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 100,
                            Damage = 1000,
                            DateCreation = new DateTime(2025, 2, 4, 9, 52, 8, 866, DateTimeKind.Local).AddTicks(4621),
                            HealthPoints = 100,
                            KillCounts = 0,
                            Nickname = "God"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
